{"version":3,"file":"static/js/194.fd3a414e.chunk.js","mappings":"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","sources":["components/layout-components/PageHeaderAlt.js","components/shared-components/Flex/index.js","constants/imageUrl.js","views/app-views/partner/partnerEdit/index.js","views/app-views/partner/partnerForm/partnerFieldsRules.js","views/app-views/partner/partnerForm/partnerInfoFields.js","views/app-views/partner/partnerForm/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: '',\r\n\t\r\n};\r\n\r\n\r\nexport default Flex\r\n","//export const IMAGE_URL = \"http://localhost:4001/uploads/images/\"\r\nexport const IMAGE_URL = \"https://backend.mobile-apps-dz.com/uploads/images/\"\r\n","import React from \"react\";\r\nimport PartnerForm from \"../partnerForm\";\r\n\r\nconst PartnerEdit = () => {\r\n  return <PartnerForm mode=\"EDIT\" />;\r\n};\r\n\r\nexport default PartnerEdit;","import { t } from \"i18next\";\r\nexport const rules = {\r\n  companyName: [\r\n    {\r\n      required: true,\r\n      message: t(\"the company name is required\"),\r\n    },\r\n  ],\r\n\r\n  RC: [\r\n    {\r\n      required: true,\r\n      message: t(\"the RC is required\"),\r\n    },\r\n  ],\r\n  description: [\r\n    {\r\n      required: true,\r\n      message: t(\"the description is required\"),\r\n    },\r\n  ],\r\n  image: [\r\n    {\r\n      required: true,\r\n      message: t(\"the image is required\"),\r\n    },\r\n  ],\r\n  phoneNumber: [\r\n    {\r\n      required: true,\r\n      message: t(\"the phone number is required\"),\r\n    },\r\n  ],\r\n  email: [\r\n    {\r\n      required: true,\r\n      message: t(\"the email is required\"),\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport {\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Upload,\r\n  Button,\r\n  DatePicker,\r\n  Divider,\r\n} from \"antd\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { t } from \"i18next\"\r\nimport { UploadOutlined } from \"@ant-design/icons\"\r\n\r\nimport { rules } from \"./partnerFieldsRules\"\r\n\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\"\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\"\r\n\r\nconst { TextArea } = Input\r\nconst { Dragger } = Upload\r\n\r\nconst imageUploadProps = {\r\n  name: \"file\",\r\n  multiple: false,\r\n  listType: \"picture\",\r\n  showUploadList: true,\r\n}\r\n\r\nconst PartnerInfoFields = (props) => {\r\n  const dateFormat = \"YYYY-MM-DD\"\r\n  const EDIT = \"EDIT\"\r\n  const { mode } = props\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n\r\n  const [fileList, setFileList] = useState([])\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const propss = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file)\r\n      const newFileList = fileList.slice()\r\n      newFileList.splice(index, 1)\r\n      setFileList(newFileList)\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file])\r\n      return false\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const [editorContent, setEditorContent] = useState(\"\")\r\n  const handleEditorChange = (event, editor) => {\r\n    const data = editor.getData()\r\n    // const plainText = data.replace(/<\\/?p>/g, '').replace(/&nbsp;/g, ' '); // Supprimer les balises <p> et remplacer &nbsp; par un espace\r\n    setEditorContent(data)\r\n    if (props.onEditorChange) {\r\n      props.onEditorChange(data)\r\n    }\r\n  }\r\n  const { partner } = useSelector((state) => state.partner)\r\n  useEffect(() => {\r\n    if (mode === EDIT && partner) {\r\n      setEditorContent(partner.description || \"\") // Assurez-vous que actualite.description est défini\r\n    }\r\n  }, [mode, partner])\r\n  return (\r\n    <div>\r\n      <Row gutter={16} align=\"middle\">\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Row gutter={16}>\r\n            <Col xs={24} sm={24} md={24}>\r\n              <Form.Item\r\n                name=\"companyName\"\r\n                label={t(\"company name\")}\r\n                rules={rules.articleName}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form.Item\r\n            label={t(\"image\")}\r\n            name=\"image\"\r\n            rules={rules.image}\r\n            valuePropName=\"fileList\"\r\n            getValueFromEvent={(e) => e.fileList}\r\n          >\r\n            <Upload\r\n              accept=\"image/*\"\r\n              maxCount={1}\r\n              listType=\"picture\"\r\n              {...propss}\r\n              className=\"custom-upload\"\r\n            >\r\n              <Button icon={<UploadOutlined />}>{t(\"Add an image\")}</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"phoneNumber\"\r\n            label={t(\"phone number\")}\r\n            rules={rules.phoneNumber}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"email\" label={t(\"email\")} rules={rules.email}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"RC\" label=\"RC\" rules={rules.RC}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            rules={rules.description}\r\n          >\r\n            <CKEditor\r\n              editor={ClassicEditor}\r\n              data={editorContent}\r\n              onChange={handleEditorChange}\r\n              onReady={(editor) => {\r\n                editor.editing.view.change((writer) => {\r\n                  writer.setStyle(\r\n                    //use max-height(for scroll) or min-height(static)\r\n                    \"min-height\",\r\n                    \"200px\",\r\n                    editor.editing.view.document.getRoot()\r\n                  )\r\n                })\r\n              }}\r\n              config={{\r\n                language: \"fr\",\r\n                direction: \"ltr\", // Assurez-vous que la direction est définie sur ltr (Left to Right)\r\n              }}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PartnerInfoFields\r\n","import React, { useState, useEffect } from \"react\"\r\nimport PageHeaderAlt from \"components/layout-components/PageHeaderAlt\"\r\nimport {\r\n  Form,\r\n  Button,\r\n  message as AntMessage,\r\n  Select,\r\n  Space,\r\n  Alert,\r\n  Progress,\r\n} from \"antd\"\r\nimport Flex from \"components/shared-components/Flex\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { t } from \"i18next\"\r\nimport PartnerInfoFields from \"./partnerInfoFields\"\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport {\r\n  createPartner,\r\n  getOnePartner,\r\n  hideLoading,\r\n  updatePartner,\r\n} from \"store/slices/partnerSlice\"\r\nimport { IMAGE_URL } from \"constants/imageUrl\"\r\n\r\nconst { Option } = Select\r\n\r\nconst getBase64 = (img, callback) => {\r\n  const reader = new FileReader()\r\n  reader.addEventListener(\"load\", () => callback(reader.result))\r\n  reader.readAsDataURL(img)\r\n}\r\n\r\nconst ADD = \"ADD\"\r\nconst EDIT = \"EDIT\"\r\n\r\nconst PartnerForm = (props) => {\r\n  const { mode = ADD } = props\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation()\r\n  const [form] = Form.useForm()\r\n  const [uploadedImg, setImage] = useState(\"\")\r\n  const [uploadLoading, setUploadLoading] = useState(false)\r\n  const [submitLoading, setSubmitLoading] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  const back = () => {\r\n    navigate(-1)\r\n  }\r\n\r\n  const handleUploadChange = (info) => {\r\n    if (info.file.status === t(\"file.loading\")) {\r\n      setUploadLoading(true)\r\n      return\r\n    }\r\n    if (info.file.status === t(\"file.finishedLoading\")) {\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImage(imageUrl)\r\n        setUploadLoading(true)\r\n      })\r\n    }\r\n  }\r\n  const [initVal, setInitialValues] = useState(null)\r\n  const { error, partner, loading } = useSelector((state) => state.partner)\r\n\r\n  useEffect(() => {\r\n    if (mode === EDIT) {\r\n      dispatch(getOnePartner(id))\r\n    }\r\n  }, [dispatch, mode, id])\r\n\r\n  useEffect(() => {\r\n    if (mode === EDIT && partner) {\r\n      const updatedPartner = {\r\n        ...partner,\r\n      }\r\n      form.setFieldsValue(updatedPartner)\r\n      if (partner && partner.image) {\r\n        const fileList = [\r\n          {\r\n            uid: \"-1\",\r\n            name: partner.image[0].originalname,\r\n            status: \"done\",\r\n            url: `${IMAGE_URL + partner.image[0].filename}`,\r\n          },\r\n        ]\r\n\r\n        form.setFieldsValue({\r\n          image: fileList,\r\n        })\r\n      }\r\n    }\r\n  }, [form, mode, partner])\r\n  // pour la description\r\n  const [editorContent, setEditorContent] = useState(\"\")\r\n  const handleEditorChange = (editorContent) => {\r\n    setEditorContent(editorContent)\r\n  }\r\n\r\n  const onFinish = async () => {\r\n    try {\r\n      const values = await form.validateFields()\r\n      const modifiedValues = {\r\n        ...values,\r\n        description: editorContent,\r\n      }\r\n      const formData = new FormData()\r\n\r\n      formData.append(\"companyName\", values.companyName)\r\n      formData.append(\"RC\", values.RC)\r\n      formData.append(\"description\", editorContent)\r\n      formData.append(\"phoneNumber\", values.phoneNumber)\r\n      formData.append(\"email\", values.email)\r\n\r\n      if (values.image && values.image[0]) {\r\n        formData.append(\"image\", values.image[0].originFileObj)\r\n      }\r\n\r\n      if (mode === ADD) {\r\n        await dispatch(createPartner(formData)).unwrap()\r\n        AntMessage.success(t(\"Partner added successfully!\"), 1)\r\n        navigate(-1)\r\n      }\r\n      if (mode === EDIT) {\r\n        await dispatch(\r\n          updatePartner({ id: partner._id, data: formData })\r\n        ).unwrap()\r\n        await AntMessage.success(t(\"Partner updated!\"), 1)\r\n        navigate(-1)\r\n      }\r\n    } catch (error) {\r\n      AntMessage.error(error)\r\n    } finally {\r\n      dispatch(hideLoading())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        layout=\"vertical\"\r\n        form={form}\r\n        onFinish={onFinish}\r\n        name=\"Nanny-form\"\r\n        className=\"ant-advanced-search-form\"\r\n        initialValues={initVal}\r\n      >\r\n        <PageHeaderAlt className=\"border-bottom mb-4\">\r\n          <div className=\"container\">\r\n            <Flex\r\n              mobileFlex={false}\r\n              justifyContent=\"between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <div>\r\n                <h2 className=\"mb-3\" style={{ display: \"inline-block\" }}>\r\n                  {mode === \"ADD\" ? t(\"Add a partner\") : t(\"Edit partner\")}\r\n                </h2>\r\n              </div>\r\n            </Flex>\r\n            {/* <CustomBreadCrumb /> */}\r\n          </div>\r\n        </PageHeaderAlt>\r\n        <div className=\"container\">\r\n          <PartnerInfoFields mode={mode} onEditorChange={handleEditorChange} />\r\n        </div>\r\n        <Flex justifyContent=\"center\">\r\n          <Space size=\"middle\" className=\"mb-3\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {mode === \"ADD\" ? t(\"Add a partner\") : t(\"Edit partner\")}\r\n            </Button>\r\n            <Button className=\"mr-2\" onClick={back}>\r\n              {t(\"cancel\")}\r\n            </Button>\r\n          </Space>\r\n        </Flex>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PartnerForm\r\n"],"names":["connect","_ref2","theme","navType","_ref","children","background","className","overlap","widthOffset","setWidthOffset","useState","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","_jsx","concat","style","getStyle","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","_Fragment","Flex","props","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","IMAGE_URL","PartnerEdit","PartnerForm","mode","rules","companyName","required","message","t","RC","description","image","phoneNumber","email","TextArea","Input","Dragger","Upload","useTranslation","fileList","setFileList","useDispatch","uploading","setUploading","propss","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","editorContent","setEditorContent","partner","useSelector","state","Row","gutter","align","_jsxs","Col","xs","sm","md","Form","Item","name","label","articleName","valuePropName","getValueFromEvent","e","accept","maxCount","listType","Button","icon","UploadOutlined","CKEditor","editor","ClassicEditor","data","onChange","handleEditorChange","event","getData","onEditorChange","onReady","editing","view","change","writer","setStyle","document","getRoot","config","language","direction","Option","Select","ADD","EDIT","navigate","useNavigate","dispatch","form","useForm","uploadedImg","setImage","uploadLoading","setUploadLoading","submitLoading","setSubmitLoading","id","useParams","initVal","setInitialValues","error","loading","getOnePartner","updatedPartner","setFieldsValue","uid","originalname","status","url","filename","layout","onFinish","async","values","validateFields","formData","FormData","append","originFileObj","createPartner","unwrap","AntMessage","success","updatePartner","_id","hideLoading","initialValues","PageHeaderAlt","display","PartnerInfoFields","Space","size","type","htmlType","onClick","back"],"sourceRoot":""}