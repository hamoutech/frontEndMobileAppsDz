{"version":3,"file":"static/js/1015.d3981b9e.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","components/util-components/IntlMessage/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/shared-components/ColorPicker/index.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/ThemeSwitch.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js","utils/index.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: '',\r\n\t\r\n};\r\n\r\n\r\nexport default Flex\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  CaretDownFilled,\r\n  DashboardOutlined,\r\n  UserAddOutlined,\r\n} from \"@ant-design/icons\"\r\nimport { IdcardOutlined } from \"@ant-design/icons\"\r\n\r\nimport CollectionsIcon from \"@mui/icons-material/Collections\"\r\nimport { UserOutlined } from \"@ant-design/icons\"\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\"\r\nimport { UsergroupAddOutlined } from \"@ant-design/icons\"\r\nimport { MedicineBoxOutlined } from \"@ant-design/icons\"\r\nimport {\r\n  HomeOutlined,\r\n  MailOutlined,\r\n  VideoCameraOutlined,\r\n  EnvironmentOutlined,\r\n  TagOutlined,\r\n} from \"@ant-design/icons\"\r\nimport { CardMembership } from \"@mui/icons-material\"\r\n\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\"\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"Acceuil\",\r\n    path: `${APP_PREFIX_PATH}/acceuil`,\r\n    title: \"Acceuil\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"Club\",\r\n    path: `${APP_PREFIX_PATH}/club`,\r\n    title: \"Club\",\r\n    icon: HomeOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"Stadium\",\r\n    path: `${APP_PREFIX_PATH}/stadium`,\r\n    title: \"Stadium\",\r\n    icon: EnvironmentOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"Partner\",\r\n    path: `${APP_PREFIX_PATH}/partner`,\r\n    title: \"Partner\",\r\n    icon: UsergroupAddOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"Ad\",\r\n    path: `${APP_PREFIX_PATH}/ad`,\r\n    title: \"Ad\",\r\n    icon: TagOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"headcount\",\r\n    path: `${APP_PREFIX_PATH}/headcount`,\r\n    title: \"Effectif\",\r\n    icon: UserOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: \"Players\",\r\n        path: `${APP_PREFIX_PATH}/headcount/players`,\r\n        title: \"Joueurs\",\r\n        icon: \"\",\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"Staff\",\r\n        path: `${APP_PREFIX_PATH}/headcount/staff`,\r\n        title: \"Staff\",\r\n        icon: \"\",\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"Matchs\",\r\n    path: `${APP_PREFIX_PATH}/matchs`,\r\n    title: \"Matchs\",\r\n    icon: UnorderedListOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"News\",\r\n    path: `${APP_PREFIX_PATH}/news`,\r\n    title: \"News\",\r\n    icon: MedicineBoxOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"clients\",\r\n    path: `${APP_PREFIX_PATH}/clients`,\r\n    title: \"Clients\",\r\n    icon: UserAddOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"cartes\",\r\n    path: `${APP_PREFIX_PATH}/cards`,\r\n    title: \"Cards\",\r\n    icon: IdcardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: \"TV\",\r\n    path: `${APP_PREFIX_PATH}/lives`,\r\n    title: \"TV\",\r\n    icon: VideoCameraOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: \"Message\",\r\n    path: `${APP_PREFIX_PATH}/messages`,\r\n    title: \"Message\",\r\n    icon: MailOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n]\r\n\r\nconst navigationConfig = [...dashBoardNavTree]\r\n\r\nexport default navigationConfig\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import { useEffect, useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { onMobileNavToggle } from \"store/slices/themeSlice\";\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst MenuItem = ({ title, icon, path }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      dispatch(onMobileNavToggle(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {icon && <Icon type={icon} />}\r\n      <span>{setLocale(title)}</span>\r\n      {path && <Link onClick={closeMobileNav} to={path} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getSideNavMenuItem = (navItem) =>\r\n  navItem.map((nav) => {\r\n    return {\r\n      key: nav.key,\r\n      label: (\r\n        <MenuItem\r\n          title={nav.title}\r\n          {...(nav.isGroupTitle ? {} : { path: nav.path, icon: nav.icon })}\r\n        />\r\n      ),\r\n      ...(nav.isGroupTitle ? { type: \"group\" } : {}),\r\n      ...(nav.submenu.length > 0\r\n        ? { children: getSideNavMenuItem(nav.submenu) }\r\n        : {}),\r\n    };\r\n  });\r\n\r\nconst getTopNavMenuItem = (navItem) =>\r\n  navItem.map((nav) => {\r\n    return {\r\n      key: nav.key,\r\n      label: (\r\n        <MenuItem\r\n          title={nav.title}\r\n          icon={nav.icon}\r\n          {...(nav.isGroupTitle ? {} : { path: nav.path })}\r\n        />\r\n      ),\r\n      ...(nav.submenu.length > 0\r\n        ? { children: getTopNavMenuItem(nav.submenu) }\r\n        : {}),\r\n    };\r\n  });\r\n\r\nconst SideNavContent = (props) => {\r\n  const { routeInfo, hideGroupTitle } = props;\r\n  const [theNav, setTheNav] = useState(navigationConfig);\r\n  // useEffect(() => {\r\n  //   if (localStorage.getItem(\"role\")) {\r\n  //     let role = localStorage.getItem(\"role\");\r\n  //     if (role === \"COACH\") {\r\n  //       const filteredNav = navigationConfig.filter(\r\n  //         (item) =>\r\n  //           ![\"Boutique\", \"Message\", \"News\", \"TV\", \"Partenaire\"].includes(\r\n  //             item.key\r\n  //           )\r\n  //       );\r\n  //       setTheNav(filteredNav);\r\n  //     }\r\n  //     if (role === \"SHOP MANAGER\") {\r\n  //       const filteredNav = navigationConfig.filter((item) =>\r\n  //         [\"Boutique\", \"headcount\", \"Club\", \"Stadium\"].includes(item.key)\r\n  //       );\r\n  //       setTheNav(filteredNav);\r\n  //     }\r\n  //   }\r\n  // }, []);\r\n  const sideNavTheme = useSelector((state) => state.theme.sideNavTheme);\r\n\r\n  const menuItems = getSideNavMenuItem(theNav);\r\n\r\n  return (\r\n    <Menu\r\n      mode=\"inline\"\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      style={{ height: \"100%\", borderRight: 0, paddingTop: \"20px\" }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n      items={menuItems}\r\n    />\r\n  );\r\n};\r\n\r\nconst TopNavContent = () => {\r\n  const topNavColor = useSelector((state) => state.theme.topNavColor);\r\n\r\n  const menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), []);\r\n\r\n  return (\r\n    <Menu\r\n      mode=\"horizontal\"\r\n      style={{ backgroundColor: topNavColor }}\r\n      items={menuItems}\r\n    />\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nexport default MenuContent;\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { NAV_TYPE_TOP } from \"constants/ThemeConstant\"\r\nimport utils from \"utils\"\r\nimport MenuContent from \"./MenuContent\"\r\n\r\nexport const TopNav = ({ topNavColor }) => {\r\n  const props = { topNavColor }\r\n  return (\r\n    <div\r\n      className={`top-nav ${utils.getColorContrast()}`}\r\n      style={{ backgroundColor: topNavColor }}\r\n    >\r\n      <div className=\"top-nav-wrapper\">\r\n        <MenuContent type={NAV_TYPE_TOP} {...props} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } = theme\r\n  return { topNavColor }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TopNav)\r\n","import React from \"react\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from \"constants/ThemeConstant\";\r\nimport { APP_NAME } from \"configs/AppConfig\";\r\nimport { useSelector } from \"react-redux\";\r\nimport utils from \"utils\";\r\nimport { Grid } from \"antd\";\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n\r\n  const navCollapsed = useSelector((state) => state.theme.navCollapsed);\r\n  const navType = useSelector((state) => state.theme.navType);\r\n\r\n  const getLogoWidthGutter = () => {\r\n    const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n    if (isMobile && !mobileLogo) {\r\n      return 0;\r\n    }\r\n    if (isNavTop) {\r\n      return \"auto\";\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n\r\n  const getLogo = () => {\r\n    if (logoType === \"light\") {\r\n      if (navCollapsed) {\r\n        return \"/img/kodomo-logo-symbol-white.png\";\r\n      }\r\n      return \"/img/kodomo-logo-text-white.png\";\r\n    }\r\n\r\n    if (navCollapsed) {\r\n      return \"/img/kodomo-logo-symbol.png\";\r\n    }\r\n    return \"/img/kodomo-logo-text.png\";\r\n  };\r\n\r\n  const getLogoDisplay = () => {\r\n    if (isMobile && !mobileLogo) {\r\n      return \"d-none\";\r\n    } else {\r\n      return \"logo\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={getLogoDisplay()}\r\n      style={{ width: `${getLogoWidthGutter()}` }}\r\n    >\r\n      {/* <img\r\n        src={getLogo()}\r\n        width={navCollapsed ? 50 : 160}\r\n        alt={`${APP_NAME} logo`}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\n// import { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\">\r\n\t\t\t\t\t{/* <Logo mobileLogo={true} /> */}\r\n\t\t\t\t\t<div className=\"nav-close\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"mobile-nav-menu\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n    \t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { Menu, Dropdown, Avatar, Skeleton, Space } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  LogoutOutlined,\r\n  SettingOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { signOut } from \"store/slices/authSlice\";\r\nimport { getUser } from \"store/slices/authSlice\";\r\nimport { createAvatar } from \"@dicebear/core\";\r\nimport { bottts } from \"@dicebear/collection\";\r\nimport { t } from \"i18next\";\r\nimport Icon from \"components/util-components/Icon\";\r\n\r\nconst MenuItemSignOut = (props) => (\r\n  <span>\r\n    <LogoutOutlined className=\"font-size-md\" />\r\n    <span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n  </span>\r\n);\r\nconst MenuItem = (props) => (\r\n  <a href={props.path}>\r\n    <Icon className=\"font-size-md\" type={props.icon} />\r\n    <span className=\"font-weight-normal mx-2\">{props.label}</span>\r\n  </a>\r\n);\r\n\r\nexport const NavProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const [theEmail, setTheEmail] = useState(\"\");\r\n  const [theName, setTheName] = useState(\"club\");\r\n  const [theRole, setTheRole] = useState(\"admin\");\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  }, [dispatch]);\r\n  const { user, loading, token } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (localStorage.getItem(\"adminemail\")) {\r\n        setTheEmail(localStorage.getItem(\"adminemail\"));\r\n        setTheName(localStorage.getItem(\"adminname\"));\r\n        setTheRole(localStorage.getItem(\"adminrole\"));\r\n      } else {\r\n        setTheEmail(user.email);\r\n        setTheName(user.headName);\r\n        setTheRole(\"SUPERADMIN\");\r\n      }\r\n    }\r\n  }, [user]);\r\n  const generateAvatar = (username) => {\r\n    const avatar = createAvatar(bottts, {\r\n      seed: username,\r\n      radius: 50,\r\n    }).toDataUriSync();\r\n    return avatar;\r\n  };\r\n\r\n  const handleClick = ({ key }) => {\r\n    if (key === \"Sign Out\") {\r\n      handleSignOut();\r\n    }\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    dispatch(signOut());\r\n  };\r\n  // user?.roles === \"ADMIN\"\r\n  const menu =\r\n    theRole === \"SUPERADMIN\" ? (\r\n      <Menu\r\n        onClick={handleClick}\r\n        items={[\r\n          {\r\n            key: \"Account Settings\",\r\n            label: (\r\n              <MenuItem\r\n                path=\"/app/mon_compte\"\r\n                icon={SettingOutlined}\r\n                label={t(\"topNav.navProfile.manageAccount\")}\r\n              />\r\n            ),\r\n          },\r\n          // {\r\n          //   key: \"Users\",\r\n          //   label: (\r\n          //     <MenuItem\r\n          //       path=\"/app/users/liste\"\r\n          //       icon={UsergroupAddOutlined}\r\n          //       label={t(\"topNav.navprofile.manageUsers\")}\r\n          //     />\r\n          //   ),\r\n          // },\r\n          {\r\n            key: \"Sign Out\",\r\n            label: <MenuItemSignOut label={t(\"topNav.navProfile.signout\")} />,\r\n          },\r\n        ]}\r\n      />\r\n    ) : (\r\n      <Menu\r\n        onClick={handleClick}\r\n        items={[\r\n          {\r\n            key: \"Account Settings\",\r\n            label: (\r\n              <MenuItem\r\n                path=\"/app/mon_compte\"\r\n                icon={SettingOutlined}\r\n                label={t(\"topNav.navProfile.manageAccount\")}\r\n              />\r\n            ),\r\n          },\r\n          {\r\n            key: \"Sign Out\",\r\n            label: <MenuItemSignOut label={t(\"topNav.navProfile.signout\")} />,\r\n          },\r\n        ]}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n      <div className=\"nav-item\">\r\n        {loading && user ? (\r\n          <Space>\r\n            <Skeleton.Avatar active />\r\n            <Skeleton.Button active size=\"small\" />\r\n          </Space>\r\n        ) : (\r\n          <div className=\"d-flex align-items-center\">\r\n            <Avatar\r\n              src={user ? generateAvatar(user.name) : generateAvatar(\"\")}\r\n            />\r\n            {/* {user.image.length > 0 && (\r\n                <div>\r\n\r\n                  <img src={`http://localhost:5000/${user.image[0].path}`}  />\r\n                </div>\r\n              )} */}\r\n            <div className=\"pl-1 d-none d-sm-block profile-text\">\r\n              <div className=\"font-size-base font-weight-bold\">{theName}</div>\r\n\r\n              <span className=\"opacity-0-8\">{theEmail}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onLocaleChange } from \"store/slices/themeSlice\";\r\nimport i18n from \"i18next\";\r\n\r\nfunction getLanguageDetail(locale) {\r\n  const data = lang.filter((elm) => elm.langId === locale);\r\n  return data[0];\r\n}\r\n\r\nconst SelectedLanguage = () => {\r\n  const locale = useSelector((state) => state.theme.locale);\r\n\r\n  const language = getLanguageDetail(locale);\r\n  const { langName, icon } = language;\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center\">\r\n      <img\r\n        style={{ maxWidth: \"20px\" }}\r\n        src={`/img/flags/${icon}.png`}\r\n        alt={langName}\r\n      />\r\n      <span className=\"font-weight-semibold ml-2\">\r\n        {langName} <DownOutlined className=\"font-size-xs\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MenuItem = (props) => {\r\n  const locale = useSelector((state) => state.theme.locale);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLocaleChange = (langId) => {\r\n    dispatch(onLocaleChange(langId));\r\n    i18n.changeLanguage(langId);\r\n  };\r\n\r\n  return (\r\n    <span\r\n      className=\"d-flex justify-content-between align-items-center\"\r\n      onClick={() => handleLocaleChange(props.langId)}\r\n    >\r\n      <div>\r\n        <img\r\n          style={{ maxWidth: \"20px\" }}\r\n          src={`/img/flags/${props.icon}.png`}\r\n          alt={props.langName}\r\n        />\r\n        <span className=\"font-weight-normal ml-2\">{props.langName}</span>\r\n      </div>\r\n      {locale === props.langId ? (\r\n        <CheckOutlined className=\"text-success\" />\r\n      ) : null}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst menu = (\r\n  <Menu\r\n    items={[\r\n      {\r\n        key: \"En\",\r\n        label: <MenuItem icon=\"fr\" langName=\"Français\" langId=\"fr\" />,\r\n      },\r\n      {\r\n        key: \"Fr\",\r\n        label: <MenuItem icon=\"us\" langName=\"English\" langId=\"en\" />,\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nexport const NavLanguage = ({ configDisplay }) => {\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={menu} trigger={[\"click\"]}>\r\n      {configDisplay ? (\r\n        <a href=\"#/\" className=\"text-gray\" onClick={(e) => e.preventDefault()}>\r\n          <SelectedLanguage />\r\n        </a>\r\n      ) : (\r\n        <div className=\"nav-item\">\r\n          <GlobalOutlined className=\"nav-icon mr-0\" />\r\n        </div>\r\n      )}\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NavLanguage;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { SketchPicker } from \"react-color\"\r\n\r\nconst ColorPicker = (props) => {\r\n  const { colorChange, color = \"\" } = props\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [pickerColor, setPickerColor] = useState(color)\r\n  const [boxColor, setBoxColor] = useState(color)\r\n\r\n  useEffect(() => {\r\n    setBoxColor(color)\r\n    setPickerColor(color)\r\n  }, [color])\r\n\r\n  const onPickerDropdown = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const onColorChange = (value) => {\r\n    const { rgb } = value\r\n    const rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n    setBoxColor(rgba)\r\n    setPickerColor(rgb)\r\n    colorChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"color-picker\">\r\n      <div className=\"color-picker-dropdown\">\r\n        <div\r\n          className=\"color\"\r\n          style={{ backgroundColor: boxColor ? boxColor : \"#ffffff\" }}\r\n          onClick={onPickerDropdown}\r\n        />\r\n      </div>\r\n      {visible && (\r\n        <>\r\n          <div className=\"color-picker-backdrop\" onClick={onPickerDropdown} />\r\n          <SketchPicker color={pickerColor} onChange={onColorChange} />\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nColorPicker.propTypes = {\r\n  color: PropTypes.string,\r\n  colorChange: PropTypes.func,\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Radio, Switch, Button, message } from \"antd\"\r\nimport {\r\n  toggleCollapsedNav,\r\n  onNavTypeChange,\r\n  onNavStyleChange,\r\n  onTopNavColorChange,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n  onDirectionChange,\r\n} from \"store/slices/themeSlice\"\r\nimport { CopyOutlined } from \"@ant-design/icons\"\r\nimport ColorPicker from \"components/shared-components/ColorPicker\"\r\nimport CopyToClipboard from \"react-copy-to-clipboard\"\r\nimport NavLanguage from \"./NavLanguage\"\r\nimport {\r\n  SIDE_NAV_LIGHT,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_DARK,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from \"constants/ThemeConstant\"\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\"\r\nimport utils from \"utils/index\"\r\n\r\nconst colorOptions = [\"#3e82f7\", \"#24a772\", \"#de4436\", \"#924aca\", \"#193550\"]\r\n\r\nconst ListOption = ({ name, selector, disabled, vertical }) => (\r\n  <div\r\n    className={`my-4 ${\r\n      vertical ? \"\" : \"d-flex align-items-center justify-content-between\"\r\n    }`}\r\n  >\r\n    <div\r\n      className={`${disabled ? \"opacity-0-3\" : \"\"} ${vertical ? \"mb-3\" : \"\"}`}\r\n    >\r\n      {name}\r\n    </div>\r\n    <div>{selector}</div>\r\n  </div>\r\n)\r\n\r\nexport const ThemeConfigurator = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    navType,\r\n    sideNavTheme,\r\n    navCollapsed,\r\n    topNavColor,\r\n    headerNavColor,\r\n    locale,\r\n    currentTheme,\r\n    direction,\r\n  } = useSelector((state) => state.theme)\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const isCollapse = navCollapsed\r\n\r\n  const { switcher, themes } = useThemeSwitcher()\r\n\r\n  const toggleTheme = (isChecked) => {\r\n    onHeaderNavColorChange(\"\")\r\n    const changedTheme = isChecked ? \"dark\" : \"light\"\r\n    dispatch(onSwitchTheme(changedTheme))\r\n    switcher({ theme: themes[changedTheme] })\r\n  }\r\n\r\n  const ontopNavColorClick = (value) => {\r\n    dispatch(onHeaderNavColorChange(\"\"))\r\n    const { rgb } = value\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n    const hex = utils.rgbaToHex(rgba)\r\n    dispatch(onTopNavColorChange(hex))\r\n  }\r\n\r\n  const onHeaderNavColorClick = (value) => {\r\n    const { rgb } = value\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n    const hex = utils.rgbaToHex(rgba)\r\n    dispatch(onHeaderNavColorChange(hex))\r\n    localStorage.setItem(\"colorHeader\", hex)\r\n  }\r\n\r\n  const onNavTypeClick = (value) => {\r\n    //dispatch(onHeaderNavColorChange(\"\"))\r\n    if (value === NAV_TYPE_TOP) {\r\n      //onTopNavColorChange(colorOptions[0])\r\n      //toggleCollapsedNav(false)\r\n    }\r\n    dispatch(onNavTypeChange(value))\r\n    localStorage.setItem(\"navType\", value)\r\n  }\r\n\r\n  const haddleNavStyleChange = (style) => {\r\n    dispatch(onNavStyleChange(style))\r\n  }\r\n\r\n  const genCopySettingJson = (configState) =>\r\n    JSON.stringify(configState, null, 2)\r\n\r\n  const handleToggleCollapseNav = () => {\r\n    dispatch(toggleCollapsedNav(!navCollapsed))\r\n  }\r\n\r\n  const handleDirectionChange = (dir) => {\r\n    dispatch(onDirectionChange(dir))\r\n    localStorage.setItem(\"direction\", dir)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-5\">\r\n        <h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n        {/* {isNavTop ? (\r\n          <ListOption\r\n            name=\"Top Nav Color:\"\r\n            vertical\r\n            selector={\r\n              <ColorPicker\r\n                color={headerNavColor}\r\n                colorChange={ontopNavColorClick}\r\n              />\r\n            }\r\n          />\r\n        ) : ( */}\r\n        <ListOption\r\n          name=\"Header Nav Color:\"\r\n          vertical\r\n          selector={\r\n            <ColorPicker\r\n              color={headerNavColor}\r\n              colorChange={onHeaderNavColorClick}\r\n            />\r\n          }\r\n        />\r\n\r\n        <ListOption\r\n          name=\"Navigation Type:\"\r\n          selector={\r\n            <Radio.Group\r\n              size=\"small\"\r\n              onChange={(e) => onNavTypeClick(e.target.value)}\r\n              value={navType}\r\n            >\r\n              <Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n              <Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n        />\r\n        {/* <ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => haddleNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/> */}\r\n        <ListOption\r\n          name=\"Side Nav Collapse:\"\r\n          selector={\r\n            <Switch\r\n              disabled={isNavTop}\r\n              checked={isCollapse}\r\n              onChange={handleToggleCollapseNav}\r\n            />\r\n          }\r\n          disabled={isNavTop}\r\n        />\r\n        {/* <ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/> */}\r\n        <ListOption\r\n          name=\"Direction:\"\r\n          selector={\r\n            <Radio.Group\r\n              size=\"small\"\r\n              onChange={(e) => handleDirectionChange(e.target.value)}\r\n              value={direction}\r\n            >\r\n              <Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n              <Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n        />\r\n      </div>\r\n      {/* <div className=\"mb-5\">\r\n        <h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n        <ListOption name=\"Language:\" selector={<NavLanguage configDisplay />} />\r\n      </div> */}\r\n      {/* <div>\r\n        <CopyToClipboard\r\n          text={genCopySettingJson({\r\n            navType,\r\n            sideNavTheme,\r\n            navCollapsed,\r\n            topNavColor,\r\n            headerNavColor,\r\n            locale,\r\n            currentTheme,\r\n            direction,\r\n          })}\r\n          onCopy={() =>\r\n            message.success(\r\n              \"Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.\"\r\n            )\r\n          }\r\n        >\r\n          <Button icon={<CopyOutlined />} block>\r\n            <span>Copy Setting</span>\r\n          </Button>\r\n        </CopyToClipboard>\r\n      </div> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ThemeConfigurator\r\n","import React, { useState } from \"react\"\r\nimport { SettingOutlined } from \"@ant-design/icons\"\r\nimport { Drawer } from \"antd\"\r\nimport ThemeConfigurator from \"./ThemeConfigurator\"\r\nimport { DIR_RTL } from \"constants/ThemeConstant\"\r\n\r\nexport const NavPanel = ({ direction }) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"nav-item\" onClick={showDrawer}>\r\n        <SettingOutlined className=\"nav-icon mr-0\" />\r\n      </div>\r\n      <Drawer\r\n        title=\"Theme Config\"\r\n        placement={direction === DIR_RTL ? \"left\" : \"right\"}\r\n        width={350}\r\n        onClose={onClose}\r\n        open={open}\r\n      >\r\n        <ThemeConfigurator />\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavPanel\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onHeaderNavColorChange, onSwitchTheme } from \"store/slices/themeSlice\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { Space, Switch, Image } from \"antd\";\r\n\r\nimport { BulbOutlined, BulbFilled } from \"@ant-design/icons\";\r\nconst ThemeSwitch = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentTheme } = useSelector((state) => state.theme);\r\n  const { switcher, themes } = useThemeSwitcher();\r\n  const toggleTheme = (isChecked) => {\r\n    const changedTheme = isChecked ? \"dark\" : \"light\";\r\n    dispatch(onSwitchTheme(changedTheme));\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n  return (\r\n    <Space direction=\"vertical\">\r\n      <Switch\r\n        checkedChildren={\r\n          <Image\r\n            preview={false}\r\n            src=\"/img/more icons/moon-symbol-20.png\"\r\n            alt=\"dark\"\r\n            width={20}\r\n          />\r\n        }\r\n        unCheckedChildren={\r\n          <Image\r\n            preview={false}\r\n            src=\"/img/more icons/sun-20.png\"\r\n            alt=\"light\"\r\n            width={20}\r\n          />\r\n        }\r\n        checked={currentTheme === \"dark\"}\r\n        onChange={toggleTheme}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\nexport default ThemeSwitch;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Layout } from \"antd\"\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\"\r\nimport Logo from \"./Logo\"\r\nimport NavProfile from \"./NavProfile\"\r\nimport NavLanguage from \"./NavLanguage\"\r\nimport NavPanel from \"./NavPanel\"\r\nimport ThemeSwitch from \"./ThemeSwitch\"\r\nimport { toggleCollapsedNav, onMobileNavToggle } from \"store/slices/themeSlice\"\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from \"constants/ThemeConstant\"\r\nimport utils from \"utils\"\r\n\r\nconst { Header } = Layout\r\n\r\nexport const HeaderNav = (props) => {\r\n  const { isMobile } = props\r\n\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const navCollapsed = useSelector((state) => state.theme.navCollapsed)\r\n  const mobileNav = useSelector((state) => state.theme.mobileNav)\r\n  const navType = useSelector((state) => state.theme.navType)\r\n  const headerNavColor = useSelector((state) => state.theme.headerNavColor)\r\n  const currentTheme = useSelector((state) => state.theme.currentTheme)\r\n  const direction = useSelector((state) => state.theme.direction)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      dispatch(toggleCollapsedNav(!navCollapsed))\r\n    } else {\r\n      dispatch(onMobileNavToggle(!mobileNav))\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === \"dark\" ? \"#00000\" : \"#ffffff\"\r\n      )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n\r\n  const navMode = mode()\r\n\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return \"0px\"\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n        {/* <Logo logoType={navMode} /> */}\r\n\r\n        <div className=\"nav\" style={{ width: `100%` }}>\r\n          <div className=\"nav-left\">\r\n            <div className=\"nav-item\" onClick={onToggle}>\r\n              <div className=\"d-flex align-items-center\">\r\n                {navCollapsed || isMobile ? (\r\n                  <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                ) : (\r\n                  <MenuFoldOutlined className=\"nav-icon\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"nav-right mr-4\">\r\n            <ThemeSwitch />\r\n            <NavLanguage />\r\n            <NavPanel direction={direction} />\r\n            <NavProfile />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nexport default HeaderNav\r\n","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nexport default function Footer() {\r\n\tconst { t } = useTranslation()\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> {t('footer.rights')}</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>{t('footer.terms')}</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>{t('footer.privacy')}</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { connect } from \"react-redux\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport SideNav from \"components/layout-components/SideNav\"\r\nimport TopNav from \"components/layout-components/TopNav\"\r\nimport Loading from \"components/shared-components/Loading\"\r\nimport MobileNav from \"components/layout-components/MobileNav\"\r\nimport HeaderNav from \"components/layout-components/HeaderNav\"\r\nimport PageHeader from \"components/layout-components/PageHeader\"\r\nimport Footer from \"components/layout-components/Footer\"\r\nimport { Layout, Grid, Alert, Space, Button } from \"antd\"\r\nimport navigationConfig from \"configs/NavigationConfig\"\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from \"constants/ThemeConstant\"\r\nimport utils from \"utils\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\"\r\n\r\nconst { Content } = Layout\r\nconst { useBreakpoint } = Grid\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n  const { token, didRefresh } = useSelector((state) => state.auth)\r\n  // const [refresh, setRefresh] = useState(false)\r\n\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n\r\n  const currentRouteInfo = utils.getRouteInfo(\r\n    navigationConfig,\r\n    location.pathname\r\n  )\r\n  const screens = utils.getBreakPoint(useBreakpoint())\r\n  const isMobile = screens.length === 0 ? false : !screens.includes(\"lg\")\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher()\r\n\r\n  if (status === \"loading\") {\r\n    return <Loading cover=\"page\" />\r\n  }\r\n\r\n  //  useEffect(() => {\r\n  //    if (didRefresh) {\r\n  //      setRefresh(true);\r\n  //    }\r\n  //  }, [didRefresh]);\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() }\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() }\r\n    }\r\n    return { paddingLeft: getLayoutGutter() }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className=\"app-container\">\r\n        {isNavSide && !isMobile ? (\r\n          <SideNav routeInfo={currentRouteInfo} />\r\n        ) : null}\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n            <PageHeader\r\n              display={currentRouteInfo?.breadcrumb}\r\n              title={currentRouteInfo?.title}\r\n            />\r\n            <Content>\r\n              <Suspense fallback={<Loading cover=\"content\" />}>\r\n                {didRefresh && (\r\n                  <Alert\r\n                    message={t(\"It seems that your session has expired.\")}\r\n                    showIcon\r\n                    type=\"error\"\r\n                    action={\r\n                      <Space>\r\n                        <Button\r\n                          type=\"default\"\r\n                          onClick={() => window.location.reload()}\r\n                        >\r\n                          {t(\"Refresh session\")}\r\n                        </Button>\r\n                      </Space>\r\n                    }\r\n                    closable\r\n                  />\r\n                )}\r\n                {children}\r\n              </Suspense>\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } = theme\r\n  return { navCollapsed, navType, locale }\r\n}\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout))\r\n// import React, { Suspense } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import SideNav from \"components/layout-components/SideNav\";\r\n// import TopNav from \"components/layout-components/TopNav\";\r\n// import Loading from \"components/shared-components/Loading\";\r\n// import MobileNav from \"components/layout-components/MobileNav\";\r\n// import HeaderNav from \"components/layout-components/HeaderNav\";\r\n// import PageHeader from \"components/layout-components/PageHeader\";\r\n// import Footer from \"components/layout-components/Footer\";\r\n// import { Layout, Grid } from \"antd\";\r\n// import navigationConfig from \"configs/NavigationConfig\";\r\n// import {\r\n//   SIDE_NAV_WIDTH,\r\n//   SIDE_NAV_COLLAPSED_WIDTH,\r\n//   NAV_TYPE_SIDE,\r\n//   NAV_TYPE_TOP,\r\n//   DIR_RTL,\r\n//   DIR_LTR,\r\n// } from \"constants/ThemeConstant\";\r\n// import utils from \"utils\";\r\n\r\n// import { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\n// const { Content } = Layout;\r\n// const { useBreakpoint } = Grid;\r\n\r\n// export const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n//   const location = useLocation();\r\n\r\n//   const currentRouteInfo = utils.getRouteInfo(\r\n//     navigationConfig,\r\n//     location.pathname\r\n//   );\r\n//   const screens = utils.getBreakPoint(useBreakpoint());\r\n//   const isMobile = screens.length === 0 ? false : !screens.includes(\"lg\");\r\n//   const isNavSide = navType === NAV_TYPE_SIDE;\r\n//   const isNavTop = navType === NAV_TYPE_TOP;\r\n//   const getLayoutGutter = () => {\r\n//     if (isNavTop || isMobile) {\r\n//       return 0;\r\n//     }\r\n//     return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\r\n//   };\r\n\r\n//   const { status } = useThemeSwitcher();\r\n\r\n//   if (status === \"loading\") {\r\n//     return <Loading cover=\"page\" />;\r\n//   }\r\n\r\n//   const getLayoutDirectionGutter = () => {\r\n//     if (direction === DIR_LTR) {\r\n//       return { paddingLeft: getLayoutGutter() };\r\n//     }\r\n//     if (direction === DIR_RTL) {\r\n//       return { paddingRight: getLayoutGutter() };\r\n//     }\r\n//     return { paddingLeft: getLayoutGutter() };\r\n//   };\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <HeaderNav isMobile={isMobile} />\r\n//       {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n//       <Layout className=\"app-container\">\r\n//         {isNavSide && !isMobile ? (\r\n//           <SideNav routeInfo={currentRouteInfo} />\r\n//         ) : null}\r\n//         <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n//           <div className={`app-content ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n//             <PageHeader\r\n//               display={currentRouteInfo?.breadcrumb}\r\n//               title={currentRouteInfo?.title}\r\n//             />\r\n//             <Content>\r\n//               <Suspense>\r\n//                 {/* {\" \"}\r\n//                 fallback={<Loading cover=\"content\" />} */}\r\n//                 {children}\r\n//               </Suspense>\r\n//             </Content>\r\n//           </div>\r\n//           <Footer />\r\n//         </Layout>\r\n//       </Layout>\r\n//       {isMobile && <MobileNav />}\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = ({ theme }) => {\r\n//   const { navCollapsed, navType, locale } = theme;\r\n//   return { navCollapsed, navType, locale };\r\n// };\r\n\r\n// export default connect(mapStateToProps)(React.memo(AppLayout));0\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","_jsx","concat","defaultProps","Icon","Component","render","type","this","_Fragment","React","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","submenu","HomeOutlined","EnvironmentOutlined","UsergroupAddOutlined","TagOutlined","UserOutlined","UnorderedListOutlined","MedicineBoxOutlined","UserAddOutlined","IdcardOutlined","VideoCameraOutlined","MailOutlined","_ref","id","fallback","t","useTranslation","translate","useBreakpoint","Grid","setLocale","localeKey","arguments","length","undefined","IntlMessage","toString","setDefaultOpen","keyList","keyString","arr","split","index","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","getBreakPoint","includes","_jsxs","Link","onClick","closeMobileNav","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","isGroupTitle","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","theNav","setTheNav","useState","navigationConfig","sideNavTheme","useSelector","state","theme","menuItems","Menu","mode","SIDE_NAV_LIGHT","style","height","borderRight","paddingTop","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","useMemo","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","_ref2","navCollapsed","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","Scrollbars","autoHide","MenuContent","getColorContrast","NAV_TYPE_TOP","mobileNav","menuContentprops","onClose","Drawer","placement","closable","open","bodyStyle","padding","ArrowLeftOutlined","MenuItemSignOut","LogoutOutlined","href","NavProfile","theEmail","setTheEmail","theName","setTheName","theRole","setTheRole","useEffect","getUser","user","loading","token","auth","localStorage","getItem","email","headName","generateAvatar","username","createAvatar","bottts","seed","radius","toDataUriSync","handleClick","handleSignOut","signOut","menu","SettingOutlined","Dropdown","overlay","trigger","Space","Skeleton","Avatar","active","Button","size","src","name","SelectedLanguage","language","locale","lang","filter","langId","getLanguageDetail","langName","maxWidth","alt","DownOutlined","handleLocaleChange","onLocaleChange","i18n","CheckOutlined","configDisplay","e","preventDefault","GlobalOutlined","colorChange","color","visible","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","onPickerDropdown","SketchPicker","onChange","value","rgb","rgba","r","g","b","a","ListOption","selector","disabled","vertical","ThemeConfigurator","navType","headerNavColor","currentTheme","direction","isNavTop","isCollapse","switcher","themes","useThemeSwitcher","ColorPicker","hex","rgbaToHex","onHeaderNavColorChange","setItem","Radio","onNavTypeClick","target","onNavTypeChange","Switch","checked","handleToggleCollapseNav","toggleCollapsedNav","handleDirectionChange","dir","onDirectionChange","DIR_LTR","DIR_RTL","setOpen","showDrawer","ThemeSwitch","checkedChildren","Image","preview","unCheckedChildren","isChecked","changedTheme","onSwitchTheme","Header","searchActive","setSearchActive","navMode","onToggle","MenuUnfoldOutlined","MenuFoldOutlined","NavLanguage","NavPanel","breadcrumbData","forEach","i","assignBreadcrumb","obj","BreadcrumbRoute","pathSnippets","useLocation","pathname","buildBreadcrumb","_","url","slice","join","Breadcrumb","Item","AppBreadcrumb","display","Footer","Date","getFullYear","APP_NAME","Content","AppLayout","didRefresh","location","currentRouteInfo","getRouteInfo","screens","isNavSide","getLayoutGutter","SIDE_NAV_COLLAPSED_WIDTH","status","Loading","cover","HeaderNav","TopNav","SideNav","paddingLeft","paddingRight","PageHeader","Suspense","Alert","message","showIcon","action","window","reload","MobileNav","getNameInitial","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","indexOf","parseFloat","toFixed","outParts","Math","round","part","getSignNum","number","positive","negative","antdTableSorter","toLowerCase","filterArray","list","data","item","deleteArrayRow","wildCardSearch","input","searchText","breakpoints"],"sourceRoot":""}