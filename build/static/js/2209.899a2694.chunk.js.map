{"version":3,"file":"static/js/2209.899a2694.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","layouts/inner-app-layout/index.js","utils/index.js","views/app-views/message/messageCompose/MailCompose.js","views/app-views/message/messageCompose/index.js","views/app-views/message/messageList/MailMenu.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: '',\r\n\t\r\n};\r\n\r\n\r\nexport default Flex\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer } from \"antd\";\r\nimport utils from \"utils\";\r\nimport { MenuOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SideContent = (props) => {\r\n  const { sideContent, sideContentWidth = 250, border } = props;\r\n  return (\r\n    <div\r\n      className={`side-content ${border ? \"with-border\" : \"\"}`}\r\n      style={{ width: `${sideContentWidth}px` }}\r\n    >\r\n      {sideContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SideContentMobile = (props) => {\r\n  const { sideContent, open, onSideContentClose } = props;\r\n\r\n  return (\r\n    <Drawer\r\n      width={320}\r\n      placement=\"left\"\r\n      closable={false}\r\n      open={open}\r\n      bodyStyle={{ paddingLeft: 0, paddingRight: 0 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"end\" alignItems=\"center\">\r\n          <div className=\"nav-close\" onClick={onSideContentClose}>\r\n            <ArrowLeftOutlined style={{ marginRight: \"10px\", fontSize:\"15px\" }} />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <div className=\"h-100\">{sideContent}</div>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport const InnerAppLayout = (props) => {\r\n  const { mainContent, pageHeader, sideContentGutter = true } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const close = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const openSideContentMobile = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inner-app-layout\">\r\n      {isMobile ? (\r\n        <SideContentMobile\r\n          open={visible}\r\n          onSideContentClose={close}\r\n          {...props}\r\n        />\r\n      ) : (\r\n        <SideContent {...props} />\r\n      )}\r\n      <div\r\n        className={`main-content ${pageHeader ? \"has-page-header\" : \"\"} ${\r\n          sideContentGutter ? \"gutter\" : \"no-gutter\"\r\n        }`}\r\n      >\r\n        {isMobile ? (\r\n          <div\r\n            className={`font-size-lg mb-3 ${\r\n              !sideContentGutter ? \"pt-3 px-3\" : \"\"\r\n            }`}\r\n          >\r\n            <MenuOutlined\r\n              onClick={() => {\r\n                openSideContentMobile();\r\n              }}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {mainContent}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInnerAppLayout.propTypes = {\r\n  sideContent: PropTypes.node,\r\n  mainContent: PropTypes.node,\r\n  pageHeader: PropTypes.bool,\r\n  sideContentWidth: PropTypes.number,\r\n  border: PropTypes.bool,\r\n  sideContentGutter: PropTypes.bool,\r\n};\r\n\r\nexport default InnerAppLayout;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport ReactQuill from 'react-quill';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MailCompose = () => {\r\n\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t[{ header: [1, 2, false] }],\r\n\t\t\t['bold', 'italic', 'underline'],\r\n\t\t\t['image', 'code-block']\r\n\t\t],\r\n\t}\r\n\r\n\tconst back = () => {\r\n\t\tnavigate(-1);\r\n\t}\r\n\r\n\tconst onFinish = () => {\r\n\t\tmessage.success('Email has been sent');\r\n\t\tnavigate('/app/apps/mail/inbox');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"mail-compose\">\r\n\t\t\t<h4 className=\"mb-4\">New Message</h4>\r\n\t\t\t<Form  name=\"nest-messages\" onFinish={onFinish} >\r\n\t\t\t\t<Form.Item name={['mail', 'to']}>\r\n\t\t\t\t\t<Input placeholder=\"To:\"/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name={['mail', 'cc']} >\r\n\t\t\t\t\t<Input placeholder=\"Cc:\"/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name={['mail', 'subject']} >\r\n\t\t\t\t\t<Input placeholder=\"Subject:\"/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name={['mail', 'content']}>\r\n\t\t\t\t\t<ReactQuill theme=\"snow\" modules={modules}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<div className=\"mt-5 text-right\">\r\n\t\t\t\t\t\t<Button type=\"link\" className=\"mr-2\">\r\n\t\t\t\t\t\t\tSave Darft\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button className=\"mr-2\" onClick={back}>\r\n\t\t\t\t\t\t\tDiscard\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MailCompose\r\n","import React from \"react\";\r\nimport MailCompose from \"./MailCompose\";\r\nimport InnerAppLayout from \"layouts/inner-app-layout\";\r\nimport MailMenu from \"../messageList/MailMenu\";\r\nconst MessageCompose = () => {\r\n  return (\r\n    <div className=\"mail\">\r\n      <InnerAppLayout\r\n        sideContent={<MailMenu url=\"app/messages/liste/\" />}\r\n        mainContent={<MailCompose />}\r\n        border\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageCompose;\r\n","import React from \"react\";\r\nimport { Menu, Button, Badge } from \"antd\";\r\nimport {\r\n  InboxOutlined,\r\n  FileTextOutlined,\r\n  MailOutlined,\r\n  StarOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst MenuItem = ({ prefix, path, label, url }) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div onClick={() => navigate(`/app/messages`)}>\r\n      {prefix}\r\n      <span>{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MailMenu = (props) => {\r\n  const { url } = props;\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const locationPath = location.pathname.split(\"/\");\r\n\r\n  const currentpath = locationPath[locationPath.length - 1];\r\n  return (\r\n    <div className=\"w-100\">\r\n      <div className=\"p-3\">\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          onClick={() => navigate(`/app/messages/compose`)}\r\n        >\r\n          <EditOutlined />\r\n          <span>Compose</span>\r\n        </Button>\r\n      </div>\r\n      <Menu\r\n        mode=\"inline\"\r\n        selectedKeys={[currentpath]}\r\n        items={[\r\n          {\r\n            key: \"inbox\",\r\n            label: <MenuItem label=\"Inbox\" prefix={<InboxOutlined />} />,\r\n          },\r\n          {\r\n            key: \"sent\",\r\n            label: (\r\n              <MenuItem\r\n                label=\"Sent\"\r\n                prefix={<MailOutlined />}\r\n                path=\"sent\"\r\n                url={url}\r\n              />\r\n            ),\r\n          },\r\n          {\r\n            key: \"starred\",\r\n            label: (\r\n              <MenuItem\r\n                label=\"Starred\"\r\n                prefix={<StarOutlined />}\r\n                path=\"starred\"\r\n                url={url}\r\n              />\r\n            ),\r\n          },\r\n          {\r\n            key: \"deleted\",\r\n            label: (\r\n              <MenuItem\r\n                label=\"Deleted\"\r\n                prefix={<DeleteOutlined />}\r\n                path=\"deleted\"\r\n                url={url}\r\n              />\r\n            ),\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailMenu;\r\n"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","_jsx","concat","defaultProps","useBreakpoint","Grid","SideContent","sideContent","sideContentWidth","border","style","width","SideContentMobile","open","onSideContentClose","Drawer","placement","closable","bodyStyle","paddingLeft","paddingRight","_jsxs","onClick","ArrowLeftOutlined","marginRight","fontSize","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","visible","setVisible","useState","e","MenuOutlined","getNameInitial","name","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","path","route","p","hasOwnProperty","this","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","color","percent","R","G","B","RR","toString","length","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","key","toLowerCase","filterArray","list","value","data","filter","item","deleteArrayRow","wildCardSearch","input","searchText","screens","breakpoints","push","MailCompose","navigate","useNavigate","Form","onFinish","message","success","Item","Input","placeholder","ReactQuill","theme","modules","toolbar","header","Button","type","back","htmlType","MessageCompose","InnerAppLayout","MailMenu","url","MenuItem","_ref","prefix","label","locationPath","useLocation","pathname","currentpath","block","EditOutlined","Menu","mode","selectedKeys","items","InboxOutlined","MailOutlined","StarOutlined","DeleteOutlined"],"sourceRoot":""}