{"version":3,"file":"static/js/4040.4eca77c5.chunk.js","mappings":"6JAIA,MAAMA,EAAeC,IACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAAKF,EAAOG,UAAS,cAAAC,OAAgBJ,EAAMK,MAAOC,SAAEN,EAAMO,OAgCzE,EA7B4BP,IAC3B,MAAM,KAAEQ,EAAI,OAAEC,EAAM,SAAEC,EAAQ,GAAEC,EAAE,KAAEN,EAAI,IAAEO,EAAG,KAAEC,EAAI,KAAEC,EAAI,MAAEC,EAAK,IAAEC,EAAG,KAAET,EAAI,YAAEU,GAAgBjB,EAC7F,OACCkB,EAAAA,EAAAA,MAAA,OAAKf,UAAU,0CAAyCG,SAAA,CACtDP,EAAa,CAACc,OAAMD,MAAKP,OAAMS,OAAMC,QAAOC,MAAKT,UAClDW,EAAAA,EAAAA,MAAA,OAAKf,UAAU,OAAMG,SAAA,EACpBY,EAAAA,EAAAA,MAAA,OAAAZ,SAAA,CAEEW,GACAhB,EAAAA,EAAAA,KAAA,OAAKkB,QAASA,IAAMF,EAAY,CAACT,OAAME,WAAUE,MAAKD,OAAMR,UAAU,+BAA8BG,SAAEE,KAEtGP,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qBAAoBG,SAAEE,KAEtCP,EAAAA,EAAAA,KAAA,QAAAK,SAAOG,QAERR,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCG,SAAEI,SAEhD,C,4FCpBR,MAAMU,EAAoBpB,IAEtBC,EAAAA,EAAAA,KAACoB,EAAAA,EAAQ,CACPC,QAAStB,EAAMuB,KACfC,UAAWxB,EAAMwB,UACjBC,QAAS,CAAC,SAASnB,UAEnBL,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBG,UAChCL,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,QAWzBN,EAAiBO,aAAe,CAC9BF,QAAS,QACTD,UAAW,cACXD,MAAMtB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,KAGb,S,0DC3BA,MAAMC,EAAO7B,IACZ,MAAM,SAAEM,EAAQ,UAAEH,EAAS,WAAE2B,EAAU,eAAEC,EAAc,WAAEC,EAAU,cAAEC,GAAkBjC,EAEvF,OACCC,EAAAA,EAAAA,KAAA,OAAKE,UAAS,GAAAC,OAFiB4B,EAAa,SAAW,YAEjB,KAAA5B,OAAID,EAAS,KAAAC,OAAI6B,EAAe,QAAUA,EAAgB,GAAE,KAAA7B,OAAI0B,EAAY,eAAiBA,EAAY,GAAE,KAAA1B,OAAI2B,EAAgB,mBAAqBA,EAAgB,IAAMzB,SAC9MA,GACI,EAYRuB,EAAKF,aAAe,CACnBK,YAAY,EACZC,cAAe,MACf9B,UAAW,IAKZ,S,8FC1BA,MAAM+B,EAAWC,MAAMC,KAAK,CAC1BC,OAAQ,IACPC,KAAI,CAACC,EAAGC,KAAC,CACVC,KAAM,qBACNC,MAAM,mBAADtC,OAAqBoC,EAAI,GAC9BG,OAAO,yDAADvC,OAA2DoC,GACjEI,YACE,yFACFC,QACE,oMA0BJ,EAtBoBC,IAAkB,IAAjB,UAACC,GAAUD,EAC9B,OACE7C,EAAAA,EAAAA,KAAC+C,EAAAA,GAAI,CACHC,WAAW,WACXnC,KAAK,QACLoC,WAAYhB,EACZiB,WAAaC,IACXnD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAKK,KAAI,CAAA/C,UACRY,EAAAA,EAAAA,MAACoC,EAAAA,EAAQ,CAAEC,QAAM,EAACZ,QAAM,EAAArC,SAAA,EACtBL,EAAAA,EAAAA,KAAC+C,EAAAA,GAAKK,KAAKG,KAAI,CACbb,OAASI,GAAW9C,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACU,IAAKwC,EAAKT,SAAa,KACnDD,OAAOzC,EAAAA,EAAAA,KAAA,KAAGwC,KAAMW,EAAKX,KAAKnC,SAAE8C,EAAKV,QACjCE,YAAaQ,EAAKR,cAEnBQ,EAAKP,YAPMO,EAAKV,QAWvB,C,gbCYN,MAAM,MAAEe,GAAUC,EAAAA,GAEZ,QAAEC,GAAYC,EAAAA,EAsTpB,EApTkBC,KAChB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEVC,EAAcC,IAAkBC,EAAAA,EAAAA,UAAS,OAE1C,QAAEC,EAAO,MAAEC,EAAK,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMH,QAwB/D,SAASI,EAAcC,GACrB,MAAMC,EAAM,IAAIC,KACVC,EAdR,SAAqBH,GASnB,MARe,qCACHA,EAAKvC,KACdc,GAAI,GAAAhD,OACAgD,EAAK6B,OAAM,KAAA7E,OAAIgD,EAAK8B,KAAI,KAAA9E,OAAI+E,IAC7B,IAAIC,KAAKhC,EAAKiC,eACdC,OAAO,cAAa,KAAAlF,OAAIgD,EAAKmC,WAGfC,KAAK,KAC3B,CAIkBC,CAAYZ,GAE5BC,EAAIY,KAAK,oBAAqBV,GAC9BF,EAAIa,cAAc,CAAEtF,KAAM,SAAUuF,MAAM/C,KACxCgD,EAAAA,EAAAA,QAAOhD,EAAS,oBAAoB,GAExC,EA9BAiD,EAAAA,EAAAA,YAAU,KACR5B,GAAS6B,EAAAA,EAAAA,MAAa,GACrB,CAAC7B,KAEJ4B,EAAAA,EAAAA,YAAU,KACJrB,GACFuB,EAAAA,GAAQvB,MAAMX,EAAE,oDAClB,GACC,CAACW,IAyBJ,MAAOwB,EAAeC,IAAoB5B,EAAAA,EAAAA,UAAS,KACnDwB,EAAAA,EAAAA,YAAU,KACRI,EAAiB1B,EAAM,GACtB,CAACA,IAEJ,MAiCM2B,EAAgBC,IACpBlF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAAAtB,SAAA,EACHL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAKyB,KAAI,CAAClC,QAASA,IAAM6C,EAAS,mBAAD5D,OAAoBgG,EAAIC,MAAO/F,UAC/DY,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAW,SAAQxB,SAAA,EACvBL,EAAAA,EAAAA,KAACqG,EAAAA,EAAY,KACbrG,EAAAA,EAAAA,KAAA,QAAME,UAAU,OAAMG,SAAEwD,EAAE,oBAI9B7D,EAAAA,EAAAA,KAAC2B,EAAAA,EAAKyB,KAAI,CAAClC,QAASA,IAjCEoF,WACxB5C,EAAQ,CACNjB,MAAOoB,EAAE,eACTjD,MAAMZ,EAAAA,EAAAA,KAACuG,EAAAA,EAAyB,IAChC3D,QAASiB,EAAE,qCACX2C,OAAQ3C,EAAE,OACV4C,OAAQ,SACRC,WAAY7C,EAAE,MACd8C,IAAAA,GACE1C,GAAS2C,EAAAA,EAAAA,IAAWlG,IACjBmG,SACAlB,MAAK,KACJI,EAAAA,GAAQe,QAAQ,CACdlE,QAAQ,GAADzC,OAAK0D,EAAE,iBACdkD,SAAU,GACV,IAEHC,OAAOxC,IACNuB,EAAAA,GAAQvB,MAAMA,EAAM,GAE1B,GACA,EAY0ByC,CAAkBd,EAAIC,KAAK/F,UACnDY,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAW,SAAQxB,SAAA,EACvBL,EAAAA,EAAAA,KAACkH,EAAAA,EAAc,KACflH,EAAAA,EAAAA,KAAA,QAAME,UAAU,OAAMG,SAAEwD,EAAE,oBAqBvBA,EAAE,cASFA,EAAE,QAWFA,EAAE,WAiBFA,EAAE,WAqCb,OACE5C,EAAAA,EAAAA,MAAAkG,EAAAA,SAAA,CAAA9G,SAAA,EACEY,EAAAA,EAAAA,MAACuC,EAAK,CAAC4D,MAAO,EAAE/G,SAAA,CAAC,IAAEwD,EAAE,yBAAyB,QAC9C5C,EAAAA,EAAAA,MAACoG,EAAAA,EAAI,CAAAhH,SAAA,EACHY,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CACHC,WAAW,SACXC,eAAe,UACfC,YAAY,EACZ7B,UAAU,MAAKG,SAAA,EAEfL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CAAC1B,UAAU,OAAO6B,YAAY,EAAM1B,UACvCL,EAAAA,EAAAA,KAACsH,EAAAA,EAAK,CACJC,YAAa1D,EAAE,UACf2D,MAAO,CAAEC,aAAc,IACvBC,SAAWC,IA1JPA,KACd,IAAIC,EAAQD,EAAEE,OAAOC,MACjBlD,EAAO,GACXA,EAAOL,EAAMwD,QAAQ5E,GACF,KAAVyE,EAAezE,EAAOA,EAAK6B,OAAOgD,cAAcC,SAASL,KAElE3B,EAAiBrB,EAAK,EAqJVsD,CAAOP,EAAE,EAEXQ,YAAU7D,IAAWE,QAGzBxE,EAAAA,EAAAA,KAAA,OAAAK,UACEY,EAAAA,EAAAA,MAACmH,EAAAA,EAAK,CAACC,MAAI,EAAAhI,SAAA,EACTL,EAAAA,EAAAA,KAACsI,EAAAA,EAAM,CACLpH,QAASA,IAAM6C,EAAS,kBACxB3D,KAAK,UACLQ,MAAMZ,EAAAA,EAAAA,KAACuI,EAAAA,EAAkB,IACzBC,OAAK,EAAAnI,SAEJwD,EAAE,+BAGL7D,EAAAA,EAAAA,KAACsI,EAAAA,EAAM,CACLpH,QAASA,IAAMyD,EAAcqB,GAE7B5F,KAAK,UACLQ,MAAMZ,EAAAA,EAAAA,KAACyI,EAAAA,EAAc,IACrBD,OAAK,EACLE,QAAM,EAAArI,SAELwD,EAAE,0CAKX7D,EAAAA,EAAAA,KAAA,OAAAK,SACGiE,GACCtE,EAAAA,EAAAA,KAAC2I,EAAAA,EAAW,IACVnE,GACFxE,EAAAA,EAAAA,KAAC4I,EAAAA,GAAM,CACLC,OAAO,QACPpG,MAAOoB,EAAE,SACTpD,SAAUoD,EAAE,mDAId7D,EAAAA,EAAAA,KAAC+C,EAAAA,GAAI,CACH+F,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5B/F,WAAY+C,EACZ9C,WAAaC,IACXnD,SAAAA,EAAAA,KAAC+C,EAAAA,GAAKK,KAAI,CAAA/C,UAuBRL,EAAAA,EAAAA,KAACqH,EAAAA,EAAI,CACH5E,OACExB,EAAAA,EAAAA,MAAA,OACEuG,MAAO,CACLlC,QAAS,OACTxD,eAAgB,gBAChBD,WAAY,UACZxB,SAAA,EAEFY,EAAAA,EAAAA,MAAA,QAAAZ,SAAA,CACG8C,EAAK6B,OACL,MAxHH8C,EAyHgB3E,EAAKmC,QAxHrCwC,GAEA9H,EAAAA,EAAAA,KAACiJ,EAAAA,EAAO,CAACxG,MAAM,YAAWpC,UACxBL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAmB,CAAC1B,MAAO,CAAE2B,SAAU,QAASC,MAAO,cAK1DpJ,EAAAA,EAAAA,KAACiJ,EAAAA,EAAO,CAACxG,MAAM,gBAAepC,UAC5BL,EAAAA,EAAAA,KAACqJ,EAAAA,EAAmB,CAAC7B,MAAO,CAAE2B,SAAU,QAASC,MAAO,eAgHlC,KAERpJ,EAAAA,EAAAA,KAACmB,EAAAA,EAAgB,CAACG,KAAM4E,EAAa/C,QAExC9C,UAEDL,EAAAA,EAAAA,KAAA,UACEW,IAAKwC,EAAK8B,KACVxC,MAAM,uBACN6G,MAAM,OACNC,OAAO,MACP/B,MAAO,CAAEgC,OAAQ,OAAQC,SAAU,UACnCC,iBAAiB,EACjBC,MAAM,kCAvIJ7B,KA2IR,WAKT,C,6DChWP,QADqB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,YAAa,UAAW,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,mYAAuY,KAAQ,SAAU,MAAS,Y,cCKllBW,EAAiB,SAAwB1I,EAAO6J,GAClD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGhK,GAAQ,CAAC,EAAG,CAC5F6J,IAAKA,EACLhJ,KAAMoJ,IAEV,EAKA,QAJ2BH,EAAAA,WAAiBpB,E,+ICR7B,SAASrF,EAAKP,GAC3B,IAAI3C,EAAY2C,EAAK3C,UACnB+J,EAAYpH,EAAKoH,UACjBC,EAAQrH,EAAKqH,MACbC,EAAkBtH,EAAKsH,gBACvB9J,EAAWwC,EAAKxC,SAChB+J,EAAQvH,EAAKuH,MACb/B,EAAOxF,EAAKwF,KACVgC,EAAoBR,EAAAA,WAAiBS,GACvCC,EAAiBF,EAAkBE,eACnCC,EAAeH,EAAkBG,aACjCC,EAAcJ,EAAkBI,YAE9BjD,EAAQ,CAAC,EAcb,OAfmB6C,EAAkBK,iBAGjB,aAAdT,EACEC,EAAQO,IACVjD,EAAQ,CACNC,aAAc8C,GAAkBH,EAAQ,EAAI,KAIhD5C,GAAQmD,EAAAA,EAAAA,IAASA,EAAAA,EAAAA,GAAS,CAAC,EAAGT,EAAQO,IAAeG,EAAAA,EAAAA,GAAgB,CAAC,EAAGT,EAAiBI,GAAkBH,EAAQ,EAAI,KAAM/B,GAAQ,CACpIwC,cAAeL,KAIJ,OAAbnK,QAAkCyK,IAAbzK,EAChB,KAEWwJ,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoB,MAAO,CACpG3J,UAAWA,EACXsH,MAAOA,GACNnH,GAAW6J,EAAQO,GAAeL,GAAsBP,EAAAA,cAAoB,OAAQ,CACrF3J,UAAW,GAAGC,OAAOD,EAAW,UAChCsH,MAAOA,GACN4C,GACL,CCtCA,IAAIW,EAAgC,SAAUC,EAAGrD,GAC/C,IAAI9D,EAAI,CAAC,EACT,IAAK,IAAIoH,KAAKD,EACRE,OAAOC,UAAUC,eAAeC,KAAKL,EAAGC,IAAMtD,EAAE2D,QAAQL,GAAK,IAAGpH,EAAEoH,GAAKD,EAAEC,IAE/E,GAAS,MAALD,GAAqD,oBAAjCE,OAAOK,sBAA2C,KAAIhJ,EAAI,EAAb,IAAgB0I,EAAIC,OAAOK,sBAAsBP,GAAIzI,EAAI0I,EAAE7I,OAAQG,IAClIoF,EAAE2D,QAAQL,EAAE1I,IAAM,GAAK2I,OAAOC,UAAUK,qBAAqBH,KAAKL,EAAGC,EAAE1I,MAAKsB,EAAEoH,EAAE1I,IAAMyI,EAAEC,EAAE1I,IADuB,CAGvH,OAAOsB,CACT,EAOWyG,EAA4BT,EAAAA,cAAoB,CACzDY,YAAa,EACbF,eAAgB,EAChBC,aAAc,EACdE,gBAAgB,IAEde,EAAY,CACdC,MAAO,EACPC,OAAQ,GACRC,MAAO,IAyFT,QApFY,SAAe7L,GACzB,IAAI8L,EACAxB,EAAoBR,EAAAA,WAAiBiC,EAAAA,IACvCC,EAAe1B,EAAkB0B,aACjCC,EAAQ3B,EAAkB2B,MAC1BC,EAAkB5B,EAAkBJ,UAClCiC,EAAcnM,EAAMc,KACtBA,OAAuB,IAAhBqL,GAAoC,OAAVF,QAA4B,IAAVA,OAAmB,EAASA,EAAMnL,OAAS,QAAUqL,EACxGC,EAAQpM,EAAMoM,MACdjM,EAAYH,EAAMG,UAClBG,EAAWN,EAAMM,SACjB+L,EAAmBrM,EAAMkK,UACzBA,OAAiC,IAArBmC,EAA8B,aAAeA,EACzDC,EAAqBtM,EAAMuM,UAC3BlC,EAAQrK,EAAMqK,MACd5C,EAAQzH,EAAMyH,MACd+E,EAAcxM,EAAMsI,KACpBA,OAAuB,IAAhBkE,GAAiCA,EACxCC,EAAazB,EAAOhL,EAAO,CAAC,OAAQ,QAAS,YAAa,WAAY,YAAa,YAAa,QAAS,QAAS,SAChH2K,GAAiB+B,EAAAA,EAAAA,KACjBC,EAAiB7C,EAAAA,SAAc,WAC/B,OAAQ3H,MAAMyK,QAAQ9L,GAAQA,EAAO,CAACA,EAAMA,IAAOwB,KAAI,SAAUc,GAC/D,OAzBR,SAAuBtC,GACrB,MAAuB,kBAATA,EAAoB4K,EAAU5K,GAAQA,GAAQ,CAC9D,CAuBe+L,CAAczJ,EACvB,GACF,GAAG,CAACtC,IACJgM,GAAkBC,EAAAA,EAAAA,GAAeJ,EAAgB,GACjDnC,EAAiBsC,EAAgB,GACjCrC,EAAeqC,EAAgB,GAC7BE,GAAaC,EAAAA,EAAAA,GAAQ3M,EAAU,CACjC4M,WAAW,IAETC,OAAwBpC,IAAVqB,GAAqC,eAAdlC,EAA6B,SAAWkC,EAC7EG,EAAYP,EAAa,QAASM,GAClCc,EAAKC,IAAWd,EAAW,GAAGnM,OAAOmM,EAAW,KAAKnM,OAAO8J,IAAa4B,EAAc,CAAC,GAAGjB,EAAAA,EAAAA,GAAgBiB,EAAa,GAAG1L,OAAOmM,EAAW,QAA6B,QAApBL,IAA4BrB,EAAAA,EAAAA,GAAgBiB,EAAa,GAAG1L,OAAOmM,EAAW,WAAWnM,OAAO+M,GAAcA,GAAcrB,GAAc3L,GAChSmN,EAAgB,GAAGlN,OAAOmM,EAAW,SACrCnC,EAAsC,QAApB8B,EAA4B,aAAe,cAE7DxB,EAAc,EACd6C,EAAQP,EAAW1K,KAAI,SAAUkL,EAAOhL,GAC5B,OAAVgL,QAA4BzC,IAAVyC,IACpB9C,EAAclI,GAEhB,IAAIiL,EAAMD,GAASA,EAAMC,KAAO,GAAGrN,OAAOkN,EAAe,KAAKlN,OAAOoC,GACrE,OAAoBsH,EAAAA,cAAoBzG,EAAM,CAC5ClD,UAAWmN,EACXG,IAAKA,EACLvD,UAAWA,EACXC,MAAO3H,EACP4H,gBAAiBA,EACjBC,MAAOA,EACP/B,KAAMA,GACLkF,EACL,IACIE,EAAe5D,EAAAA,SAAc,WAC/B,MAAO,CACLU,eAAgBA,EAChBC,aAAcA,EACdC,YAAaA,EACbC,eAAgBA,EAEpB,GAAG,CAACH,EAAgBC,EAAcC,EAAaC,IAE/C,GAA0B,IAAtBqC,EAAW3K,OACb,OAAO,KAET,IAAIsL,EAAW,CAAC,EAYhB,OAXIrF,IACFqF,EAASC,SAAW,OAEfjD,IACHgD,EAASjG,cAAgB+C,IAGzBE,IACFgD,EAASE,UAAYrD,EACrBmD,EAASG,OAASrD,GAEAX,EAAAA,cAAoB,OAAOc,EAAAA,EAAAA,GAAS,CACtDzK,UAAWiN,EACX3F,OAAOmD,EAAAA,EAAAA,IAASA,EAAAA,EAAAA,GAAS,CAAC,EAAG+C,GAAWlG,IACvCgF,GAA0B3C,EAAAA,cAAoBS,EAAawD,SAAU,CACtEhG,MAAO2F,GACNH,GACL,C","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","components/shared-components/Flex/index.js","components/shared-components/LoadingData/index.js","views/app-views/live/liveList/index.js","../node_modules/@ant-design/icons-svg/es/asn/ExportOutlined.js","../node_modules/@ant-design/icons/es/icons/ExportOutlined.js","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from \"react\";\r\nimport { Dropdown, Menu } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EllipsisDropdown = (props) => {\r\n  return (\r\n    <Dropdown\r\n      overlay={props.menu}\r\n      placement={props.placement}\r\n      trigger={[\"click\"]}\r\n    >\r\n      <div className=\"ellipsis-dropdown\">\r\n        <EllipsisOutlined />\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nEllipsisDropdown.propTypes = {\r\n  trigger: PropTypes.string,\r\n  placement: PropTypes.string,\r\n};\r\n\r\nEllipsisDropdown.defaultProps = {\r\n  trigger: \"click\",\r\n  placement: \"bottomRight\",\r\n  menu: <Menu />,\r\n};\r\n\r\nexport default EllipsisDropdown;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: '',\r\n\t\r\n};\r\n\r\n\r\nexport default Flex\r\n","\r\nimport { Avatar, List, Skeleton} from \"antd\";\r\nimport React from \"react\";\r\nconst listData = Array.from({\r\n  length: 2,\r\n}).map((_, i) => ({\r\n  href: \"https://ant.design\",\r\n  title: `ant design part ${i + 1}`,\r\n  avatar: `https://xsgames.co/randomusers/avatar.php?g=pixel&key=${i}`,\r\n  description:\r\n    \"Ant Design, a design language for background applications, is refined by Ant UED Team.\",\r\n  content:\r\n    \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\r\n}));\r\n\r\n\r\nconst LoadingData = ({hasAvatar}) => {\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      dataSource={listData}\r\n      renderItem={(item) => (\r\n        <List.Item key={item.title}>\r\n          <Skeleton  active avatar>\r\n            <List.Item.Meta\r\n              avatar={ hasAvatar? <Avatar src={item.avatar} /> : null}\r\n              title={<a href={item.href}>{item.title}</a>}\r\n              description={item.description}\r\n            />\r\n            {item.content}\r\n          </Skeleton>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoadingData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  Menu,\r\n  Typography,\r\n  Card,\r\n  Input,\r\n  Tooltip,\r\n  Result,\r\n  message,\r\n  Tag,\r\n  Badge,\r\n  Space,\r\n  List,\r\n} from \"antd\";\r\nimport { t } from \"i18next\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\r\nimport { createAvatar } from \"@dicebear/core\";\r\nimport { initials } from \"@dicebear/collection\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { saveAs } from \"file-saver\";\r\nimport JSZip from \"jszip\";\r\n\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport {\r\n  FileSearchOutlined,\r\n  EyeOutlined,\r\n  ContainerOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  ExclamationCircleOutlined,\r\n  PaperClipOutlined,\r\n  PlusCircleOutlined,\r\n  ExportOutlined,\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport LoadingData from \"components/shared-components/LoadingData\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLives, deleteLive } from \"store/slices/liveSlice\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst LivesList = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedLive, setSelectedJob] = useState(null);\r\n\r\n  const { loading, lives, error } = useSelector((state) => state.lives);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchLives());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      message.error(t(\"Failed to retreive data. Please try again later.\"));\r\n    }\r\n  }, [error]);\r\n\r\n  function generateCSV(data) {\r\n    const header = \"titled,link,creationDate,display\\n\";\r\n    const csv = data.map(\r\n      (item) =>\r\n        `${item.titled},${item.link},${moment(\r\n          new Date(item.creationDate)\r\n        ).format(\"DD/MM/YYYY\")},${item.display}`\r\n    );\r\n\r\n    return header + csv.join(\"\\n\");\r\n  }\r\n\r\n  function downloadAsZip(data) {\r\n    const zip = new JSZip();\r\n    const csvData = generateCSV(data);\r\n\r\n    zip.file(\"exported_data.csv\", csvData);\r\n    zip.generateAsync({ type: \"blob\" }).then((content) => {\r\n      saveAs(content, \"exported_data.zip\");\r\n    });\r\n  }\r\n\r\n  //search\r\n  const [filteredLives, setFilteredLives] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredLives(lives);\r\n  }, [lives]);\r\n\r\n  const search = (e) => {\r\n    let query = e.target.value;\r\n    let data = [];\r\n    data = lives.filter((item) => {\r\n      return query === \"\" ? item : item.titled.toLowerCase().includes(query);\r\n    });\r\n    setFilteredLives(data);\r\n  };\r\n\r\n  const showDeleteConfirm = async (id) => {\r\n    confirm({\r\n      title: t(\"Delete live\"),\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: t(\"Are you sure to delete this live?\"),\r\n      okText: t(\"Yes\"),\r\n      okType: \"danger\",\r\n      cancelText: t(\"No\"),\r\n      onOk() {\r\n        dispatch(deleteLive(id))\r\n          .unwrap()\r\n          .then(() => {\r\n            message.success({\r\n              content: `${t(\"Deleted live\")}`,\r\n              duration: 5,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            message.error(error);\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const dropdownMenu = (row) => (\r\n    <Menu>\r\n      <Menu.Item onClick={() => navigate(`/app/lives/edit/${row._id}`)}>\r\n        <Flex alignItems=\"center\">\r\n          <EditOutlined />\r\n          <span className=\"ml-2\">{t(\"Edit job\")}</span>\r\n        </Flex>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item onClick={() => showDeleteConfirm(row._id)}>\r\n        <Flex alignItems=\"center\">\r\n          <DeleteOutlined />\r\n          <span className=\"ml-2\">{t(\"Delete\")}</span>\r\n        </Flex>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const columns = [\r\n    // {\r\n    //   title: t(\"newslist.table.newsCell\"),\r\n    //   dataIndex: \"titled\",\r\n\r\n    //   sorter: {\r\n    //     compare: (a, b) => {\r\n    //       a = a.titled.toLowerCase();\r\n    //       b = b.titled.toLowerCase();\r\n    //       return a > b ? -1 : b > a ? 1 : 0;\r\n    //     },\r\n    //   },\r\n    // },\r\n\r\n    {\r\n      title: t(\"Created on\"),\r\n      dataIndex: \"creationDate\",\r\n      render: (date) => (\r\n        <span> {moment(new Date(date)).format(\"DD/MM/YYYY\")} </span>\r\n      ),\r\n      // render: (date) => <span>{moment(date).format(\"YYYY-MM-DD\")}</span>,\r\n      // sorter: (a, b) => moment(a.date).unix() - moment(b.date).unix(),\r\n    },\r\n    {\r\n      title: t(\"link\"),\r\n      dataIndex: \"link\",\r\n      // sorter: {\r\n      //   compare: (a, b) => {\r\n      //     a = a.stadiumName.toLowerCase();\r\n      //     b = b.stadiumName.toLowerCase();\r\n      //     return a > b ? -1 : b > a ? 1 : 0;\r\n      //   },\r\n      // },\r\n    },\r\n    {\r\n      title: t(\"display\"),\r\n      dataIndex: \"display\",\r\n      render: (value) => {\r\n        if (value) {\r\n          return (\r\n            <CheckCircleOutlined\r\n              style={{ fontSize: \"large\", color: \"green\" }}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <CloseCircleOutlined style={{ fontSize: \"large\", color: \"red\" }} />\r\n          );\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: t(\"Actions\"),\r\n      dataIndex: \"actions\",\r\n\r\n      render: (_, elm) => (\r\n        <div className=\"text-right\">\r\n          <EllipsisDropdown menu={dropdownMenu(elm)} />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const displayValue = (value) => {\r\n    if (value) {\r\n      return (\r\n        <Tooltip title=\"Displayed\">\r\n          <CheckCircleOutlined style={{ fontSize: \"large\", color: \"green\" }} />\r\n        </Tooltip>\r\n      );\r\n    } else {\r\n      return (\r\n        <Tooltip title=\"Not displayed\">\r\n          <CloseCircleOutlined style={{ fontSize: \"large\", color: \"red\" }} />\r\n        </Tooltip>\r\n      );\r\n    }\r\n  };\r\n  function transformLink(link) {\r\n    if (link) {\r\n      const url = new URL(link);\r\n      const videoId = url.searchParams.get(\"v\");\r\n      const newPath = `/embed/${videoId}`;\r\n      url.pathname = newPath;\r\n      url.search = \"rel=0\"; // Add the rel=0 parameter to prevent suggestions\r\n\r\n      return url.href;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title level={2}> {t(\"All resgistered lives\")} </Title>\r\n      <Card>\r\n        <Flex\r\n          alignItems=\"center\"\r\n          justifyContent=\"between\"\r\n          mobileFlex={false}\r\n          className=\"p-3\"\r\n        >\r\n          <Flex className=\"mb-1\" mobileFlex={false}>\r\n            <Input\r\n              placeholder={t(\"Search\")}\r\n              style={{ marginBottom: 16 }}\r\n              onChange={(e) => {\r\n                search(e);\r\n              }}\r\n              disabled={loading || error ? true : false}\r\n            />\r\n          </Flex>\r\n          <div>\r\n            <Space wrap>\r\n              <Button\r\n                onClick={() => navigate(`/app/lives/add`)}\r\n                type=\"primary\"\r\n                icon={<PlusCircleOutlined />}\r\n                block\r\n              >\r\n                {t(\"newslist.table.addButton\")}\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() => downloadAsZip(filteredLives)}\r\n                // onClick={generateZip}\r\n                type=\"primary\"\r\n                icon={<ExportOutlined />}\r\n                block\r\n                danger\r\n              >\r\n                {t(\"newslist.table.exportButton\")}\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        </Flex>\r\n        <div>\r\n          {loading ? (\r\n            <LoadingData />\r\n          ) : error ? (\r\n            <Result\r\n              status=\"error\"\r\n              title={t(\"Error\")}\r\n              subTitle={t(\"Something wrong, we can't retrieve this data\")}\r\n            />\r\n          ) : (\r\n            // <Table columns={columns} dataSource={lives} rowKey=\"_id\" />\r\n            <List\r\n              grid={{ gutter: 16, column: 3 }}\r\n              dataSource={filteredLives}\r\n              renderItem={(item) => (\r\n                <List.Item>\r\n                  {/*                <Card title={item.link}>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <p>\r\n                          {moment(new Date(item.creationDate)).format(\r\n                            \"DD/MM/YYYY\"\r\n                          )}\r\n                        </p>\r\n                        <p>{displayValue(item.display)}</p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <EllipsisDropdown menu={dropdownMenu(item)} />\r\n                      </div>\r\n                    </div>\r\n                        </Card>*/}\r\n\r\n                  <Card\r\n                    title={\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {item.titled}\r\n                          {\"  \"}\r\n                          {displayValue(item.display)}\r\n                        </span>{\" \"}\r\n                        {/* Adjust your title here */}\r\n                        <EllipsisDropdown menu={dropdownMenu(item)} />\r\n                      </div>\r\n                    }\r\n                  >\r\n                    <iframe\r\n                      src={item.link}\r\n                      title=\"YouTube video player\"\r\n                      width=\"100%\"\r\n                      height=\"300\"\r\n                      style={{ border: \"none\", overflow: \"hidden\" }}\r\n                      allowFullScreen={true}\r\n                      allow=\"autoplay; encrypted-media\"\r\n                    ></iframe>\r\n                  </Card>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LivesList;\r\n","// This icon file is generated automatically.\nvar ExportOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"fill-rule\": \"evenodd\", \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 912H144c-17.7 0-32-14.3-32-32V144c0-17.7 14.3-32 32-32h360c4.4 0 8 3.6 8 8v56c0 4.4-3.6 8-8 8H184v656h656V520c0-4.4 3.6-8 8-8h56c4.4 0 8 3.6 8 8v360c0 17.7-14.3 32-32 32zM770.87 199.13l-52.2-52.2a8.01 8.01 0 014.7-13.6l179.4-21c5.1-.6 9.5 3.7 8.9 8.9l-21 179.4c-.8 6.6-8.9 9.4-13.6 4.7l-52.4-52.4-256.2 256.2a8.03 8.03 0 01-11.3 0l-42.4-42.4a8.03 8.03 0 010-11.3l256.1-256.3z\" } }] }, \"name\": \"export\", \"theme\": \"outlined\" };\nexport default ExportOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExportOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExportOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExportOutlined = function ExportOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExportOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(ExportOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'ExportOutlined';\n}\nexport default RefIcon;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n    direction = _ref.direction,\n    index = _ref.index,\n    marginDirection = _ref.marginDirection,\n    children = _ref.children,\n    split = _ref.split,\n    wrap = _ref.wrap;\n  var _React$useContext = React.useContext(SpaceContext),\n    horizontalSize = _React$useContext.horizontalSize,\n    verticalSize = _React$useContext.verticalSize,\n    latestIndex = _React$useContext.latestIndex,\n    supportFlexGap = _React$useContext.supportFlexGap;\n  var style = {};\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n  if (children === null || children === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nimport Item from './Item';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\nvar Space = function Space(props) {\n  var _classNames;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    space = _React$useContext.space,\n    directionConfig = _React$useContext.direction;\n  var _props$size = props.size,\n    size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n    align = props.align,\n    className = props.className,\n    children = props.children,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n    customizePrefixCls = props.prefixCls,\n    split = props.split,\n    style = props.style,\n    _props$wrap = props.wrap,\n    wrap = _props$wrap === void 0 ? false : _props$wrap,\n    otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n  var supportFlexGap = useFlexGapSupport();\n  var _React$useMemo = React.useMemo(function () {\n      return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n        return getNumberSize(item);\n      });\n    }, [size]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    horizontalSize = _React$useMemo2[0],\n    verticalSize = _React$useMemo2[1];\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight';\n  // Calculate latest one\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    var key = child && child.key || \"\".concat(itemClassName, \"-\").concat(i);\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]);\n  // =========================== Render ===========================\n  if (childNodes.length === 0) {\n    return null;\n  }\n  var gapStyle = {};\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap';\n    // Patch for gap not support\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\nexport default Space;"],"names":["renderAvatar","props","_jsx","Avatar","className","concat","type","children","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","EllipsisDropdown","Dropdown","overlay","menu","placement","trigger","EllipsisOutlined","defaultProps","Menu","Flex","alignItems","justifyContent","mobileFlex","flexDirection","listData","Array","from","length","map","_","i","href","title","avatar","description","content","_ref","hasAvatar","List","itemLayout","dataSource","renderItem","item","Item","Skeleton","active","Meta","Title","Typography","confirm","Modal","LivesList","t","useTranslation","navigate","useNavigate","dispatch","useDispatch","selectedLive","setSelectedJob","useState","loading","lives","error","useSelector","state","downloadAsZip","data","zip","JSZip","csvData","titled","link","moment","Date","creationDate","format","display","join","generateCSV","file","generateAsync","then","saveAs","useEffect","fetchLives","message","filteredLives","setFilteredLives","dropdownMenu","row","_id","EditOutlined","async","ExclamationCircleOutlined","okText","okType","cancelText","onOk","deleteLive","unwrap","success","duration","catch","showDeleteConfirm","DeleteOutlined","_Fragment","level","Card","Input","placeholder","style","marginBottom","onChange","e","query","target","value","filter","toLowerCase","includes","search","disabled","Space","wrap","Button","PlusCircleOutlined","block","ExportOutlined","danger","LoadingData","Result","status","grid","gutter","column","Tooltip","CheckCircleOutlined","fontSize","color","CloseCircleOutlined","width","height","border","overflow","allowFullScreen","allow","ref","React","AntdIcon","_objectSpread","ExportOutlinedSvg","direction","index","marginDirection","split","_React$useContext","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","_extends","_defineProperty","paddingBottom","undefined","__rest","s","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","spaceSize","small","middle","large","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","align","_props$direction","customizePrefixCls","prefixCls","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","isArray","getNumberSize","_React$useMemo2","_slicedToArray","childNodes","toArray","keepEmpty","mergedAlign","cn","classNames","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider"],"sourceRoot":""}